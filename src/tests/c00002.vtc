varnishtest "Testing chunked gzipped data"

server s1 {
        rxreq
        expect req.http.soap-ws-ns == "http://schemas.reuters.com/mytest"
        txresp -status 200

        rxreq
        expect req.http.soap-ws-ns == "http://schemas.reuters.com/mytest"
        txresp -status 200
} -start

varnish v1 -vcl+backend {
    import ${vmod_soap};
    import std;

    sub vcl_recv
    {
            if (req.http.Content-Encoding ~ "(?i)\bgzip\b") {
                    set req.filters = "gunzip";
            }
            std.cache_req_body(1M, partial=true);
            if(soap.is_valid()) {
                    set req.http.soap-ws-ns = soap.action_namespace();
            }
            else {
                    return (synth(400, "Wrong SOAP message"));
            }
    }
} -start

# Send gzipped data in multiple chunks
client c1 {
        timeout 4
        txreq -req POST -hdr "Content-Encoding: gzip" -hdr "Content-length: 160"
        sendhex "1f 8b 08 00 00 00 00 00 00 ff 75 8e c1 0a c2 30 10 44 7f a5 ec dd ac de 44 d2 14 04 41 ef fe 40 69 d6 b6 d0 64 4b 76 53 ec df 9b a2 3d 7a 1b 86 f7 86 b1 cd 3b 4c d5 42 49 46 8e 35 9c cc 11 2a"
        sendhex "8a 1d fb 31 f6 35 64 7d 1d ce d0 38 7b 8b 0b 4d 3c 53 55 e8 28 35 0c aa f3 05 51 ba 81 42 2b a6 b4 c2 ed 6c 38 f5 b8 05 a4 1f 8f e0 ec 9d 5a 4f"
        sendhex "c9 d9 2c 94 1e 9e a2 8e ba a2 b3 b8 f7 57 f6 ab b3 4f 12 fd b3 9e 28 6b 39 68 3a 0e 18 56 2d 20 6c fe d7 c3 fd 9a fb 00 dc b9 a5 00 cb 00 00 00"
        rxresp
        expect resp.status == 200
} -run

# Send gzipped data in one chunk
client c2 {
        timeout 4
        txreq -req POST -hdr "Content-Encoding: gzip" -hdr "Content-length: 160"
        sendhex "1f 8b 08 00 00 00 00 00 00 ff 75 8e c1 0a c2 30 10 44 7f a5 ec dd ac de 44 d2 14 04 41 ef fe 40 69 d6 b6 d0 64 4b 76 53 ec df 9b a2 3d 7a 1b 86 f7 86 b1 cd 3b 4c d5 42 49 46 8e 35 9c cc 11 2a 8a 1d fb 31 f6 35 64 7d 1d ce d0 38 7b 8b 0b 4d 3c 53 55 e8 28 35 0c aa f3 05 51 ba 81 42 2b a6 b4 c2 ed 6c 38 f5 b8 05 a4 1f 8f e0 ec 9d 5a 4f c9 d9 2c 94 1e 9e a2 8e ba a2 b3 b8 f7 57 f6 ab b3 4f 12 fd b3 9e 28 6b 39 68 3a 0e 18 56 2d 20 6c fe d7 c3 fd 9a fb 00 dc b9 a5 00 cb 00 00 00"
        rxresp
        expect resp.status == 200
} -run
