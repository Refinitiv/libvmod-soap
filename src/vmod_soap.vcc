#
# Copyright (c) 2019, Refinitiv
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
# IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

$Module soap 3 "Soap VMOD"
$ABI strict

DESCRIPTION
===========

$Event event_function


$Function BOOL is_valid(PRIV_TASK)

Returns TRUE if the request body is a valid SOAP message.



$Function STRING action(PRIV_TASK)

Return name of SOAP body's action


$Function STRING action_namespace(PRIV_TASK)

Return namespace of SOAP body's action


$Function VOID add_namespace(PRIV_VCL, STRING, STRING)

Add namespace "prefix/uri" into known namespaces.
See also `xpath_header` and `xpath_body`.


$Function STRING xpath_header(PRIV_VCL, PRIV_TASK, STRING)

Return xpath value in SOAP Header.
It uses the namespace table (see `add_namespace`).


$Function STRING xpath_body(PRIV_VCL, PRIV_TASK, STRING)

Return xpath value in SOAP Body.
It uses the namespace table (see `add_namespace`).


$Function VOID synthetic(PRIV_TASK, INT, STRING)

Create a SOAP synthetic response's body containing SOAP FaultCode and
FaultMessage. Note that FaultMessage will contain any internal errors found.
Format of the response depends of the SOAP version of the request (1.1 or 1.2).

$Object parser(ENUM {req_body, resp_body} source,
	[ENUM {cached, all} req_body])

Create a soap parser object on the given source.

For ``source=req_body``, the ``req_body`` argument also needs to be
specified to define whether the parser is allowed to read ``all`` of
the requets body (potentially making it unavailable to the backend
request and other consumers) or if it is limited to the ``cached``
portion.

Multiple instances on the same *source* can be instantiated to parse
multiple reponse bodies across restarts.

$Method VOID .add_namespace(STRING prefix, STRING uri)

Define namespace *prefix* from *uri* for the parser instance.

Can only be called from ``vcl_init {}``.

$Method STRING .header_xpath(STRING)

Return an xpath value from the SOAP header.

$Method STRING .body_xpath(STRING)

Return an xpath value from the SOAP body.
